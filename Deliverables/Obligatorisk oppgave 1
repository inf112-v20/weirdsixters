Deloppgave 1:
Vi har bestemt oss for gruppenavn (WeirdSixters). 

Vi har presentert vår egen kompetanse slik som dette:
- Frank: Middels erfaring med programmering. Har programmert et battleship-spill i java tidligere.
- Sebastian: Middels erfaring programmering. Har programmert et battleship-spill i java tidligere.
- Joakim: Linux, Git, en god del spillprogrammering. Jobber med programmering. 
- Einar: God del programmeringserfaring, Unity, generelt god oversikt. Har programmert et battleship-spill i java tidligere.
- Sander: Middels erfaring med programmering. Mye skriveerfaring. Jobber som IT-assistent for UIB. Har programmert et battleship-spill i java tidligere.
 
I tillegg har vi fordelt roller ut ifra ønske og evne i plenum:
- Frank: Kundekontakt
- Sebastian: HMS ansvarlig
- Joakim: Tech support
- Einar: Teamleader
- Sander: Sekretær


Vi har opprettet et project board. Vi har også gjort klart kravene som dette prosjektet har.

Deloppgave 2:
Vi har en overordnet plan om å lage et spill der spilleren programmerer en robot i et produksjonslokale ved hjelp av programmeringskort 
og ellers følger alle reglene til Roborally.
Målet med spillet er å besøke flagg i stigende rekkefølge uten å dø 3 ganger. 
Det skal være mulig å spille sammen på flere maskiner over LAN.


Under er en liste med høynivåkravene
- ha et spillebrett
- vise en brikke
- kunne flytte en brikke
- spille fra ulike maskiner
- dele ut kort
- velge kort (5 av 9)
- flytte brikke utfra kort
- dele ut nye kort ved ny runde
- vise flere (i alle fall to) brikker på samme brett
- dele ut kort til hver robot
- flytte flere brikker samtidig
- flytte brikker utfra prioritet på kort
- elementer på brettet(flagg, vegg, skiftenøkkel, osv)
- kunne registrere at en robot har vært innom et flagg


Våre krav til første innlevering er:
- Vise brettet.
- Vise spiller.

Deloppgave 3:

Vi har valgt å bruke Kanban med issues og pull-requests som prosjektmetodikk fordi  det er enkelt å bruke og fordi Joakimhar erfaring med det. 
I tillegg så vil legge vekt på parprogrammering for å oppnå større oversikt og samarbeid. 

Vår prosjektplan: 
- Møter vil bli organisert gjennom Slack.
- Oppgaver vil bli tildelt gjennom Slack og møter. Vi vil også rangere oppgavene i to-do listen på project boardet slik at de viktigste oppgavene står øverst.
- Vi oppsummerer det vi har gjort siden sist på møtene. Her legger vi også til nye oppgaver.
- Kodebasen ligger i github, andre filer deles med Slack.

Angående organisering så vil vi møtes hver uke på obligatoriske grupper i tillegg til ekstra møter etter behov. Vi vil også dele ut oppgaver som vi kan gjøre på egenhånd.

Når vi programmerer vil vi tilpasse slik at vi helst ikke jobber på samme oppgaver på samme tid slik at vi unngår konflikter. 
På samme tid vil vi fokusere på å ha lav terskel for å spørre om hjelp. 
I tillegg vil vi bruke branches og pull-requests slik at vi kan se gjennom hverandres kode og ha problemfrie commits.
Videre så vil vi fokusere testing på reglene.
